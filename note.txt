
nav-bar, card, dropdown, form的定义

封装HTML页面生成header与footer，然后通过
<% include partials/header %>
<% include partials/footer %>
添加到各个页面

<% %>执行代码逻辑，但其内容不显示在html中(for循环)
<%= %>其内容显示在html中，显示在网页上

superviser app.js自动重启node服务器
control + c 停止服务器

MongoDB
启动mongodb（两个终端）
$ cd /usr/local/mongodb/bin
$ sudo ./mongod
再打开一个终端进入执行以下命令：
$ cd /usr/local/mongodb/bin 
$ ./mongo

操作mongodb（第二个终端>）
mongo
show dbs
use x
db.x.collections()
db.x.find({}, {})
db.x.drop()

mongodb与node连接
启动mongodb
require("mongoose")
使用mongoose.connect连接本地数据库
new一个mongoose.Schema，说明必要参数
mongoose.model打包建立模型
使用model与mongodb进行交互




RESTFUL API
name      url           verb      desc.
=======================================================
index     /dogs         get      display a list of dogs
new       /dogs/new     get      display form to make a new dog
create    /dogs         post     add new dog to DB
show      /dogs/:id     get      shows info about one dog

campgrounds API
INDEX  /campgrounds     get
NEW    /campgrounds/new get
CREATE /campgrounds     post  
SHOW   /campgrounds/:id get 

comment API (nested routes)
NEW    /campgrounds/:id/comments/new       get
CREATE /campgrounds/:id/comments           post

res.render("user/show", {});
其中render默认为views/，因此添加路径时前面不加/

定义router("/user/:id")路由时前面必须添加/，而且对应的<a href="/user/">,也必须添加路由

Data Associations(数据之间建立关联)
user - comment - campground.comments.push(comment)
1 embedding data
直接将一个Schema放入另一个Schema中，DB存储关联实例
2 referencing data(通过DB存储的ID关联)
建立两个model的Schema，在一个Schema中声明另一个Schema的类型（type），并进行引用（ref）
var campgroundSchema = new mongoose.Schema({
  comments: [{
    type: mongoose.Schema.Types.ObjectId,
    ref: "Comment",
  }]
})；
读取时数据库中存储的关联实例ID需转化为实例
Campground.findById(req.params.id).populate("comments").exec(function(){};
模型封装之后，通过 module.exports = model 导出，其他文件通过 require("model") 导入


Authentication
part 1
npm install passport passport-local passport-local-mongoose --save
define user model and build up associations
part 2
configure passport
add register route
add register template
part 3
add login route
add login template
part 4
add logout route
prevent user from adding to a comment if not signed in
add links to navbar
part 5
show/hide auth links in navbar correctly

refator the routes 
use express router to recognize all the routes

User + Comment
associate users and comments
save athors' name to a comment automatically

User + Campground
prevent an unauthenticated user from creating a campground
save username+id to newly created campground
new + create 中进行 middleware 检查

editing Campground
add method-override
add edit route for Campground
add link to edit page 
add update route
fix $set problems

delete Campground
add destroy route
add delete button

authorization pt1
user can only edit/delete his own campground
hide/show edit/delete button

editing comments
user can only edit/delete his own comment
hide/show edit/delete button

deleting comments
add destroy route
add delete button

authorization pt2
user can only edit/delete his own comments
hide/show edit/delete button

adding in flash 
install and config connect-flash
add bootstrap alert to header
do flash before redirect

further improvements for yelpcamp


user: 

comment:

campground:


mistakes:
1 路径是否加 / 
2 拼写错误
3 req与res混乱
4 form表单指定action与method


javascript tricky
this----reserved key word and determined in exec 
1 global context---> window
  function({this})---> no declared object---->global context---->window 
  "use strict"----> strict mode----> function(){this}----> no declared object---->undefined

2 implicit bind 
  inside declared object----> whether nested or not----> this means the cloest parent object(including)

3 explicit bind
  .call(object, a, b, c, d) 指定或者修改当前context下面this的指向（更改为指定的object）
  .apply(object, [a, b, c, d]) 使用上几乎和call一样，但是可以同时通过array[]指定多个参数
  .bind(object, params) 和call几乎一样，but not invoke immediately and return a function with object
  OOP new指定当前object {
    1 create an empty object
    2 使得this指向the created object
    3 add "return this" to the constructor function
    4 add __proto__ to the object////?
  }

4 当执行asycr代码(setTimeOut)时会丢失this的指向值---> 通过.bind(this)进行强行绑定


OOP javascript
定义constructor function, and use "new" to build up instances
OOP new指定当前object {
    1 create an empty object
    2 使得this指向the created object
    3 add "return this" to the constructor function
    4 add __proto__ to the object {
      student = new Person("Max", "23");
      Person.prototype === student.__proto__;//建立联系
    }
  }
  using call and apply to refactor the code(this means motorcycle) to avoid duplication
  car.call(this, a, b, c);
  car.apply(this, [a,b, c]);


cloudinary
openweather API












